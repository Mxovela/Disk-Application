unit Main;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics,
  Controls, Forms, uniGUITypes, uniGUIAbstractClasses,
  uniGUIClasses, uniGUIRegClasses, uniGUIForm, uniGUIBaseClasses, uniPanel,
  Vcl.Imaging.pngimage, uniImage, uniLabel, uniButton, uniEdit, uniDBNavigator,
  uniBasicGrid, uniDBGrid, uniTreeView, uniRadioButton, Data.DB, DBAccess, MemDS, MyAccess;

type
  TMainForm = class(TUniForm)
    backgroundPanel: TUniPanel;
    topPanel: TUniPanel;
    leftPanel: TUniPanel;
    rightPanel: TUniPanel;
    staffedit: TUniEdit;
    passedit: TUniEdit;
    loginbtn: TUniButton;
    stafflbl: TUniLabel;
    passlbl: TUniLabel;
    UniImage1: TUniImage;
    UniTreeView1: TUniTreeView;
    diskGrid: TUniDBGrid;
    UniDBNavigator1: TUniDBNavigator;
    searchedit: TUniEdit;
    searchbtn: TUniButton;
    userrad: TUniRadioButton;
    departmentrad: TUniRadioButton;
    facultyrad: TUniRadioButton;
    vehiclemakerad: TUniRadioButton;
    UniLabel1: TUniLabel;
    seqedit: TUniEdit;
    regnoedit: TUniEdit;
    receiptedit: TUniEdit;
    bayedit: TUniEdit;
    regyearedit: TUniEdit;
    contactedit: TUniEdit;
    addressedit: TUniEdit;
    UniLabel2: TUniLabel;
    UniLabel3: TUniLabel;
    UniLabel4: TUniLabel;
    UniLabel5: TUniLabel;
    UniLabel6: TUniLabel;
    UniLabel7: TUniLabel;
    savebtn: TUniButton;
    submitbtn: TUniButton;
    regdateedit: TUniEdit;
    UniLabel8: TUniLabel;
    MyQuery1: TMyQuery;
    MyDataSource1: TMyDataSource;
    procedure loginbtnClick(Sender: TObject);
    procedure submitbtnClick(Sender: TObject);
    procedure diskGridCellClick(Column: TUniDBGridColumn);
    procedure UniTreeView1Change(Sender: TObject; Node: TUniTreeNode);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

function MainForm: TMainForm;

implementation

{$R *.dfm}

uses
  uniGUIVars, uniGUIApplication, MainModule;

function MainForm: TMainForm;
begin
  Result := TMainForm(UniMainModule.GetFormInstance(TMainForm));
end;

procedure TMainForm.loginbtnClick(Sender: TObject);
var
  Username, Password: string;
begin
  Username := staffedit.Text;
  Password := passedit.Text;

  // Check if the staff number or password fields are empty
  if (Username = '') or (Password = '') then
  begin
    ShowMessage('Please enter staff number and password as required');
    Exit;
  end;

  try
    // Prepare SQL query to check credentials
    MyQuery1.SQL.Text := 'SELECT COUNT(*) FROM stafflog WHERE staff_number = :staff_number AND password = :password';
    MyQuery1.ParamByName('staff_number').AsString := Username;
    MyQuery1.ParamByName('password').AsString := Password;
    MyQuery1.Open;

    if MyQuery1.Fields[0].AsInteger > 0 then
    begin
      ShowMessage('Login successful');
      // Add code to navigate to the form displaying the grid or perform other actions
    end
    else
    begin
      ShowMessage('Invalid username or password');
    end;
  finally
    MyQuery1.Close;
  end;
end;

procedure TMainForm.submitbtnClick(Sender: TObject);
var
  RegSeq, RegNo, ReceiptNo, Bay, RegYear, Contact, Address, RegDate: string;
begin
  // Retrieve data from the form fields
  RegSeq := seqedit.Text;
  RegNo := regnoedit.Text;
  ReceiptNo := receiptedit.Text;
  Bay := bayedit.Text;
  RegYear := regyearedit.Text;
  Contact := contactedit.Text;
  Address := addressedit.Text;
  RegDate := regdateedit.Text;

  // Check if any required field is empty
  if (RegNo = '') or (ReceiptNo = '') or (Bay = '') or
     (RegYear = '') or (Contact = '') or (Address = '') or (RegDate = '') then
  begin
    ShowMessage('Please fill in all fields');
    Exit;
  end;

  try
    // Prepare SQL query to insert data into disk_reg table
    MyQuery1.SQL.Text := 'INSERT INTO disk_reg (reg_seg, reg_no, receipt_no, bay_no, reg_year, contact_no, address, reg_date) ' +
                         'VALUES (:reg_seg, :reg_no, :receipt_no, :bay_no, :reg_year, :contact_no, :address, :reg_date)';
    MyQuery1.ParamByName('reg_seg').AsString := RegSeq;
    MyQuery1.ParamByName('reg_no').AsString := RegNo;
    MyQuery1.ParamByName('receipt_no').AsString := ReceiptNo;
    MyQuery1.ParamByName('bay_no').AsString := Bay;
    MyQuery1.ParamByName('reg_year').AsString := RegYear;
    MyQuery1.ParamByName('contact_no').AsString := Contact;
    MyQuery1.ParamByName('address').AsString := Address;
    MyQuery1.ParamByName('reg_date').AsString := RegDate;
    MyQuery1.ExecSQL;

    // Show message for successful insert
    ShowMessage('Data inserted successfully');

    // Refresh the dataset to reflect changes in the grid
    MyQuery1.Close;
    MyQuery1.SQL.Text := 'SELECT * FROM disk_reg';
    MyQuery1.Open;

    // Refresh the grid to display updated data
    diskGrid.Refresh;
  except
    on E: Exception do
      ShowMessage('Error: ' + E.Message);
  end;
end;

procedure TMainForm.UniTreeView1Change(Sender: TObject; Node: TUniTreeNode);
begin
  // Check which item in the tree view is selected
  if Node.Text = 'Disk Registration' then
  begin
    try
      // Prepare SQL query to fetch data from disk_reg table
      MyQuery1.SQL.Text := 'SELECT * FROM disk_reg';
      MyQuery1.Open;

      // Refresh the grid to display the fetched data
      diskGrid.Refresh;
    except
      on E: Exception do
        ShowMessage('Error: ' + E.Message);
    end;
  end;
end;


procedure TMainForm.diskGridCellClick(Column: TUniDBGridColumn);
begin
// Check if a valid row is selected
  if diskGrid.DataSource.DataSet.RecordCount > 0 then
  begin
    // Populate the fields in the right panel with the values of the selected record
    seqedit.Text := diskGrid.DataSource.DataSet.FieldByName('reg_seg').AsString;
    regnoedit.Text := diskGrid.DataSource.DataSet.FieldByName('reg_seg').AsString;
    receiptedit.Text := diskGrid.DataSource.DataSet.FieldByName('receipt_no').AsString;
    bayedit.Text := diskGrid.DataSource.DataSet.FieldByName('bay_no').AsString;
    regyearedit.Text := diskGrid.DataSource.DataSet.FieldByName('reg_year').AsString;
    contactedit.Text := diskGrid.DataSource.DataSet.FieldByName('contact_no').AsString;
    addressedit.Text := diskGrid.DataSource.DataSet.FieldByName('address').AsString;
    regdateedit.Text := diskGrid.DataSource.DataSet.FieldByName('reg_date').AsString;

end;
end;

initialization
  RegisterAppFormClass(TMainForm);

end.

